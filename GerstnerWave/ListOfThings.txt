To get the normals ive tried finite Difference but mainly i averaged normals from nearby triangles the result is distorted AF
heres the actual code

vec3 tempNorm = vec3(1.0);
    //vec3 adjVec[6];
    //vec2 sumOfAdjWaves[6];
    //vec2 transform[6];

    tempNorm.x = derivSum.x + (derivSum.x * derivSum.w) - (derivSum.y * derivSum.z);
    tempNorm.y = -1 - derivSum.y - derivSum.w;
    tempNorm.z = (-1 * (derivSum.x * derivSum.w)) + derivSum.z + (derivSum.y * derivSum.z);

    //Staticaly store the transformations. Sacrificing memory for just sliver of speed LOL
    //(up, upRight, right, down, downLeft, left)
    /*transform[0] = vec2(0.0, -0.0005);
    transform[1] = vec2(0.0005, -0.0005);
    transform[2] = vec2(0.0005, 0.0);
    transform[3] = vec2(0.0, 0.0005);
    transform[4] = vec2(-0.0005, 0.0005);
    transform[5] = vec2(-0.0005, 0.0);

    for(int i = 0; i < 6; i++) {
        adjVec[i] = vec3(0.0);
        sumOfAdjWaves[i] = vec2(0.0);
        for(int j = 0; j < 6; j++) {
            sumOfAdjWaves[i].x += InvSine(waveParams[j].x, waveParams[j].y, normalize(Directions[j]), vec3((curPos.x + transform[i].x), aPos.y, (curPos.z + transform[i].y)), time, waveParams[j].z);
            sumOfAdjWaves[i].y += InvCosine(waveParams[j].x, waveParams[j].y, normalize(Directions[j]), vec3((curPos.x + transform[i].x), aPos.y, (curPos.z + transform[i].y)), time, waveParams[j].z);
        }

        adjVec[i].x = transform[i].x + sumOfAdjWaves[i].x;
        adjVec[i].y = sumOfAdjWaves[i].y * -1;
        adjVec[i].z = transform[i].y + sumOfAdjWaves[i].x;
    }
    
    //Normals of each triangles
    vec3 t1Normal = normalize(cross(adjVec[1], adjVec[0]));
    vec3 t2Normal = normalize(cross(adjVec[2], adjVec[1]));
    vec3 t3Normal = normalize(cross(adjVec[3], adjVec[2]));
    vec3 t4Normal = normalize(cross(adjVec[4], adjVec[3]));
    vec3 t5Normal = normalize(cross(adjVec[5], adjVec[4]));
    vec3 t6Normal = normalize(cross(adjVec[0], adjVec[5]));

    tempNorm = t1Normal + t2Normal + t3Normal + t4Normal + t5Normal + t6Normal;*/